@model Administracion.Models.ManagerViewModel
@using Administracion.Models;
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div id="page-content" class="sidebar-partial sidebar-visible-lg sidebar-no-animations">

    <div id="main-container">
        <div class="content-header">
            <ul class="nav-horizontal text-center">
                <li>
                    <a href="/DataBase/Index"><i class="fa fa-home"></i> Home</a>
                </li>
                <li>
                    <a href="javascript:void(0)"><i class="gi gi-group"></i> Encargados</a>
                </li>
            </ul>
        </div>
        <ul class="breadcrumb breadcrumb-top">
            <li><a href="/home">Home</a></li>
            <li><a href="">Encargados</a></li>
        </ul>
        <div class="row">

            <div class="col-md-12">
                <!-- Basic Form Elements Block -->
                <div class="block">
                    <div class="block-title">
                        <h2><strong>ALTA NUEVOS </strong> ENCARGADOS</h2>
                    </div>
                    @using (Html.BeginForm("CreateUpdateManager", "Managers", FormMethod.Post , htmlAttributes: new { @class = "form-horizontal form-bordered" }))
                    {
                        
                        @Html.AntiForgeryToken()
                        

                        @Html.HiddenFor(x => x.User.Id)
                        <input type="hidden" name="Id" id="Id" value="@Model.Id"  />


                        <div class="form-group">                            
                            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                <p class="form-control-static">GENERA AUTOMATICAMENTE</p>
                            </div>
                        </div>

                        <div class="form-group">                            
                            @Html.LabelFor(model => model.User.Name, htmlAttributes: new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.User.Name, new { htmlAttributes = new { @class = "form-control", @placeholder="Nombre",
                               @required = "required",
                               @oninvalid = "this.setCustomValidity('Ingrese nombre')",
                               @oninput = "setCustomValidity('')"

                           } })
                                <span class="help-block">Coloque el nombre completo</span>
                                @Html.ValidationMessageFor(model => model.User.Name, "", new { @class = "text-danger" })                                                                
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.User.Surname, htmlAttributes: new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.User.Surname, new { htmlAttributes = new { @class = "form-control", @placeholder = "Apellido",
                               @required = "required",
                               @oninvalid = "this.setCustomValidity('Ingrese apellido')",
                               @oninput = "setCustomValidity('')"
                           } })
                                <span class="help-block">Coloque el apellido completo</span>
                                @Html.ValidationMessageFor(model => model.User.Surname, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <label class="col-md-3 control-label" for="example-text-input">Telefono / Celular</label>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.User.ContactData.Telephone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Telefono" } })
                                <span class="help-block">Coloque el numero de tel.</span>
                            </div>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.User.ContactData.Cellphone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Celular" } })
                                <span class="help-block">Coloque el celular.</span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label" for="example-text-input">DOCUMENTACION</label>
                            <div class="col-md-5">                                
                                @Html.EditorFor(model => model.User.DNI, new { htmlAttributes = new { @class = "form-control", @placeholder = "DNI" } })
                                
                            </div>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.User.CUIT, new { htmlAttributes = new { @class = "form-control", @placeholder = "CUIT" } })                                
                            </div>
                        </div>


                        <div class="form-group">
                            <label class="col-md-3 control-label" for="example-text-input">Domicilio Particular</label>
                            @Html.LabelFor(model => model.Home.Street, htmlAttributes: new { @class = "col-md-1 control-label" })
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.Home.Street, new { htmlAttributes = new { @class = "form-control", @placeholder = "Direccion",
                               @required = "required",
                               @oninvalid = "this.setCustomValidity('Ingrese calle')",
                               @oninput = "setCustomValidity('')"
                           } })
                                <span class="help-block">Coloque la direccon completa</span>
                                @Html.ValidationMessageFor(model => model.Home.Street, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.Home.Number, new { htmlAttributes = new { @class = "form-control", @placeholder = "nro",
                               @required = "required",
                               @oninvalid = "this.setCustomValidity('Ingrese numero')",
                               @oninput = "setCustomValidity('')"
                           } })
                                <span class="help-block">Coloque la altura.</span>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-4 control-label" for="example-text-input">CP</label>
                            <div class="col-md-3">                                
                                @Html.EditorFor(model => model.Home.PostalCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "CP" } })
                                <span class="help-block">Coloque el codigo postal</span>
                            </div> <div class="col-md-3">                                      
                                @Html.DropDownListFor(model => model.Home.City, Model.Provinces,"-- Elija ciudad --", new { @class = "form-control" })
                            <span class="help-block">Coloque la ciudad</span>
                            </div>
                        </div>
                  

                    <div class="form-group row">
                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class='col-md-4 '>

                            <div class='input-group date'>
                            @Html.EditorFor(model => model.StartDate, new
                                                   {
                                                       htmlAttributes = new
                                                       {
                                                           @class = "form-control",
                                                           @required = "required",
                                                           @oninvalid = "this.setCustomValidity('Ingrese fecha de inicio')",
                                                           @oninput = "setCustomValidity('')"
                                                       }
                                                   })
                            @Html.ValidationMessage("", new { @class = "text-danger" })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class='col-md-4 '>

                            <div class='input-group date'>
                                @Html.EditorFor(model => model.BirthDate, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control",
                                   @required = "required",
                                   @oninvalid = "this.setCustomValidity('Ingrese fecha de nacimiento')",
                                   @oninput = "setCustomValidity('')"
                               }
                           })

                                @Html.ValidationMessage("", new { @class = "text-danger" })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                            <label class="col-md-3 control-label" for="example-select">SINDICATO</label>
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.LaborUnionId,  Model.LaboralUnionList, "-- ELIJA SINDICATO --",new { @class = "form-control",
                               @required = "required",
                               @oninvalid = "this.setCustomValidity('Elija sindicato')",
                               @oninput = "setCustomValidity('')"
                           })                                
                            </div>                                        
                    </div>


                    <div class="form-group">
                        <label class="col-md-3 control-label" for="example-select">CONSORCIO</label>
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.ConsortiumId, Model.ConsortiumList, "-- ELIJA CONSORCIO --", new
                           {
                               @class = "form-control"
                           })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-3 control-label" for="example-select">POSICIÓN</label>
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.ManagerPositionId, Model.ManagerPositionList, "-- ELIJA POSICIÓN --", new
                       {
                           @class = "form-control"
                       })
                        </div>
                    </div>



                    <div class="form-group row">
                            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class='col-md-3 '>
                                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", @placeholder = "Salario",
                               @required = "required",
                               @oninvalid = "this.setCustomValidity('Ingrese salario')",
                               @oninput = "setCustomValidity('')"
                           } })
                                <span class="help-block">Coloque el salario</span>
                                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                            </div>

                        @Html.LabelFor(model => model.ExtraHourValue, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class='col-md-3 '>
                            @Html.EditorFor(model => model.ExtraHourValue, new { htmlAttributes = new { @class = "form-control", @placeholder = "Horas extras" } })
                            <span class="help-block">Coloque el costo de las horas extra</span>
                            @Html.ValidationMessageFor(model => model.ExtraHourValue, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        <label class="col-md-3 control-label" for="example-text-input">TALLES INDUMENTARIA</label>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.FootwearWaist, new { htmlAttributes = new { @class = "form-control", @placeholder = "Talle Calzado" } })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.PantsWaist, new { htmlAttributes = new { @class = "form-control", @placeholder = "Talle Pantalon" } })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.ShirtWaist, new { htmlAttributes = new { @class = "form-control", @placeholder = "Talle Camisa" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Schedule, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Schedule, new { htmlAttributes = new { @class = "form-control", @placeholder = "Horarios" } })

                        </div>
                    </div>




                    <div class="form-group row">
                            @Html.LabelFor(model => model.WorkInsurance, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class='col-md-9 '>
                                @Html.EditorFor(model => model.WorkInsurance, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nombre",
                               @required = "required",
                               @oninvalid = "this.setCustomValidity('Ingrese seguro laboral')",
                               @oninput = "setCustomValidity('')"
                           } })
                                @Html.ValidationMessageFor(model => model.WorkInsurance, "", new { @class = "text-danger" })
                            </div>
                    </div>

             

                    <div  class="form-group">
                        <label class="col-md-3 control-label">Femenino/Masculino</label>
                        <label class="switch switch-primary" data-toggle="tooltip" title="" data-original-title="Genero">
                            <input id="Male" name="Male" type="checkbox" value="true" @(Model.Male ? "checked=\"checked\"" : "")  />

                            <span data-toggle="tooltip" title="Masculino"></span>
                            
                        </label>                       
                    </div>

                    <div class="form-group">
                        <label class="col-md-3 control-label">Titular/Suplente</label>
                        <label class="switch switch-primary" data-toggle="tooltip" title="" data-original-title="Suplente?">
                            <input id="IsAlternate" name="IsAlternate" type="checkbox" value="true" @(Model.IsAlternate ? "checked=\"checked\"" : "") />

                            <span data-toggle="tooltip" title="Suplente?"></span>

                        </label>


                    </div>
                    
                                        <div class="form-group form-actions">
                                            <div class="col-md-9 col-md-offset-3">
                                                <button type="submit" class="btn btn-sm btn-primary"><i class="fa fa-angle-right"></i> Guardar</button>
                                                <button type="reset" class="btn btn-sm btn-warning"><i class="fa fa-repeat"></i> Resetear</button>
                                            </div>
                                        </div>

                    }

                    </div>                            
                </div>            
            </div>    
        </div>    
    </div>
  <!-- Footer -->
<footer class="clearfix">
    <div class="pull-right">
        Creado por <a href="http://www.bluedot.com.ar" _blank">Bluedot</a>
    </div>
    <div class="pull-left">
        Software Version 1.0
    </div>
</footer>
<!-- END Footer -->


