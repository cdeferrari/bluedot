@model Administracion.Models.TicketViewModel
@using Administracion.Models;
@{
    ViewBag.Title = Model.Id > 0 ? "Editar Ticket" : "Nuevo Ticket";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .ticket-create-add {
        margin-top: 6px;
        /*margin-right: 1em;*/
        font-size: 1.50em;
    }
</style>

<div id="page-content" class="sidebar-partial sidebar-visible-lg sidebar-no-animations">

    <div id="main-container">
        <div class="block full">
            @if (Model.Id > 0)
            {
                <h2 class="ml-4">
                    @if(Model.Status.Description.ToLower() == "open") {
                        <i class="fa fa-unlock"></i>
                    }
                    else {
                        <i class="fa fa-lock"></i>
                    }
                    @Model.Title
                </h2>
            }
            else
            {
                <h2 class="ml-4">Nuevo Ticket</h2>
            }
            <hr />

            @if(Model.Id != 0)
            {
                @*<div class="row">
                    <div class="col-md-2 col-md-offset-2">
                        <a href="@Url.Action("SetTicketBlocker", "Backlog", new { id = Model.Id})" class="btn btn-sm btn-danger"><i class="fa fa-flag"></i> Dar prioridad alta</a>
                    </div>
                    <div class="col-md-5 text-right">
                        @if (Model.Status.Description != "closed")
                        {
                            <a href="@Url.Action("CloseTicket", "Backlog", new { id = Model.Id })" class="btn btn-sm btn-default"><i class="fa fa-lock"></i> Cerrar</a>
                        }

                        @if (Model.Resolved.HasValue && Model.Resolved.Value)
                        {
                        <a style="background-color:cadetblue; color:white" href="javascript:void(0)" class="btn btn-sm btn-default">
                            <i class="fa fa-check"></i> Resuelto
                        </a>
                        }
                        else
                        {
                        <a href="@Url.Action("ResolveTicket", "Backlog", new { id = Model.Id })" class="btn btn-sm btn-default">
                            <i class="fa fa-check"></i> Resolver
                        </a>
                        }
                        
                    </div>

                </div>*@
                <div class="row">
                    <div class="col-md-3 col-md-offset-1">
                        <h6><label>Creado por:</label> @Model.Creator.Name @Model.Creator.Surname el @Model.OpenDate.ToShortDateString()</h6>
                    </div>
                    <div class="col-md-2">
                        <h6><label>Estado:</label> @(Model.Status.Description.ToLower() == "open" ? "abierto" : "cerrado")</h6>
                    </div>
                    <div class="col-md-5 text-right">
                        @if (Model.Status.Description != "closed")
                        {
                            <a href="@Url.Action("CloseTicket", "Backlog", new { id = Model.Id })" class="btn btn-sm btn-default"><i class="fa fa-lock"></i> Cerrar</a>
                        }

                        @if (Model.Resolved.HasValue && Model.Resolved.Value)
                        {
                            <a style="background-color:cadetblue; color:white" href="javascript:void(0)" class="btn btn-sm btn-default">
                                <i class="fa fa-check"></i> Resuelto
                            </a>
                        }
                        else
                        {
                            <a href="@Url.Action("ResolveTicket", "Backlog", new { id = Model.Id })" class="btn btn-sm btn-default">
                                <i class="fa fa-check"></i> Resolver
                            </a>
                        }
                        <a href="@Url.Action("SetTicketBlocker", "Backlog", new { id = Model.Id})" class="btn btn-sm btn-danger"><i class="fa fa-flag"></i> Dar prioridad alta</a>
                    </div>
                </div>
                <hr>
            }
            <div class="row">
                @using (Html.BeginForm("CreateUpdateTicket", "Backlog", FormMethod.Post, new { enctype = "multipart/form-data", @class = "col-md-offset-2 col-md-8" }))
                {
                    @Html.AntiForgeryToken()

                    if (Model.Id > 0)
                    {
                        @Html.HiddenFor(x => x.Title)
                    }
                
                    @Html.HiddenFor(model => model.Id)
                    if (Model.Id == 0)
                    {
                        <div class="form-group clearfix">
                            <div class="col-md-11">
                                <label class="control-label" for="Titulo">Titulo</label>
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })

                                @Html.ValidationMessage("", new { @class = "text-danger" })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    <div class="form-group clearfix">
                        <div class="col-md-11">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessage("", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })                            
                        </div>
                        
                    </div>


                    <div class="form-group clearfix">
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.LimitDate, htmlAttributes: new { @class = "control-label" })
                            <div class='input-group date'>
                                @Html.EditorFor(model => model.LimitDate, new { htmlAttributes = new { @class = "form-control" } })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>

                            @Html.ValidationMessageFor(model => model.LimitDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-5 col-md-offset-1">
                            <label class="control-label">Prioridad</label>
                            @Html.DropDownListFor(model => model.Priority.Id, Model.PriorityList, "-- Elija Prioridad --", new { @class = "form-control" })
                        </div>
                        
                    </div>


                    <div class="form-group clearfix">
                        <div class="col-md-5">
                            <label class="control-label">Consorcio</label>
                            @{ 
                                object _htmlAttributes;
                                if (Model.Id > 0)
                                {
                                    _htmlAttributes = new { @class = "form-control", disabled = "disabled" };
                                }
                                else
                                {
                                    _htmlAttributes = new { @class = "form-control" };
                                }
                            }
                            @Html.DropDownListFor(model => model.ConsortiumId, Model.ConsortiumList, "-- Elija Consorcio --", _htmlAttributes)
                        </div>
                        <div class="col-md-5 col-md-offset-1">
                            <label class="control-label">Unidad Funcional</label>
                            @Html.DropDownListFor(model => model.FunctionalUnitId, Model.FunctionalUnitList, "-- Elija Unidad Funcional --", new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group clearfix">
                        <div class="col-md-5">
                            <label class="control-label">&Aacute;rea</label>
                             @Html.DropDownListFor(model => model.Area.Id, Model.AreaList, "-- Elija Area --", new { @class = "form-control" })
                        </div>
                        <div class="col-md-5 col-md-offset-1">
                            <label class="control-label">Reclamado por:</label>
                            @Html.EditorFor(model => model.Customer, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(x => x.Customer, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group clearfix">
                        <div class="col-md-5">
                            <label class="control-label">Asignado a</label>
                            @Html.DropDownListFor(model => model.BacklogUser.Id, Model.BacklogUserList, "-- Elija usuario--", new { @class = "form-control chosen-select" })
                        </div>
                        <div class="col-md-5 col-md-offset-1">
                            <label class="control-label" for="example-email-input">Autoasignar</label>
                            <div class="form-group">
                                <label id="autoasign-label" class="switch switch-primary" for='@Model.Autoasign'>
                                    <input id="Autoasign" name="Autoasign" type="checkbox" value="true" @(Model.Autoasign ? "checked=\"checked\"" : "") />
                                    <span data-toggle="tooltip" title="OK"></span>
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-2 text-right col-md-offset-9">
                            <input type="submit" value="Guardar" class="btn btn-info" />
                        </div>
                    </div>                    
                }
            </div>
        </div>

        @if (Model.Id > 0)
        {
            <div class="row">
                <div class="col-lg-6">
                    <!-- Latest Orders Block -->
                    <div class="block">
                        <!-- Latest Orders Title -->
                        <div class="block-title row">
                            <h2 class="col-md-11"><strong><i class="fa fa-thumb-tack"></i> &Oacute;rdenes</strong></h2>
                            <div class="col-md-1 text-center ticket-create-add">
                                <a href="#modal-add-task" data-toggle="modal" title="Generar orden de trabajo" value="Generar Orden" class="text-success">
                                    <i class="fa fa-plus-circle"></i>
                                </a>
                            </div>
                        </div>
                        <!-- END Latest Orders Title -->
                        <!-- Latest Orders Content -->
                        @if(Model.Tasks.Any())
                        {
                            <table class="table table-borderless table-striped table-vcenter table-bordered">
                                <tbody>
                                    <tr>
                                        <td class="text-center"><strong>Descripci&oacute;n </strong></td>
                                        <td class="text-center"><strong>Estado Actual</strong></td>
                                        <td class="text-center">Creacion</td>
                                        <td class="text-center">Acciones</td>
                                    </tr>

                                    @foreach (var task in Model.Tasks)
                                    {
                                        <tr>
                                            @{
                                                var estado = task.Status.Description == "open" ? "abierto" : "cerrado";
                                            }

                                            <td class="text-center">@task.Description</td>
                                            <td class="text-center">
                                                <strong>@estado</strong>
                                            </td>
                                            @{ var workerDescription = task.Worker != null ? task.Worker.User.Name + " " + task.Worker.User.Surname : string.Empty; }
                                            <td class="text-right">@task.OpenDate.ToShortDateString()</td>

                                            <td class="text-center">
                                                <div class="btn-group">
                                                    <a href="#modal-task-details-@task.Id" data-toggle="modal" title="Detalle" class="btn btn-xs btn-default"><i class="fa fa-eye"></i></a>
                                                    <a href="#modal-delete-task-@task.Id" data-toggle="modal" title="Borrar tarea" class="btn btn-xs btn-danger"><i class="fa fa-times"></i></a>
                                                    <a href="#modal-spend-@task.Id" data-toggle="modal" title="Asociar Gasto" class="btn btn-xs btn-info"><i class="fa fa-dollar"></i></a>
                                                </div>
                                            </td>
                                        </tr>

                                        @Html.Partial("_TaskDetail", task)

                                                <div id="modal-delete-task-@task.Id" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
                                                    <div class="modal-dialog">
                                                        <div class="modal-content">
                                                            <!-- Modal Header -->
                                                            <div class="modal-header text-center">
                                                                <h2 class="modal-title"><i class="fa fa-pencil"></i> ELIMINAR TAREA</h2>
                                                            </div>
                                                            <!-- END Modal Header -->
                                                            <!-- Modal Body -->
                                                            <div class="modal-body">
                                                                <form action="index.html" method="post" enctype="multipart/form-data" class="form-horizontal form-bordered" onsubmit="return false;">
                                                                    <p>Estas seguro que queres Eliminar la tarea @task.Description </p>

                                                                    <div class="form-group form-actions">
                                                                        <div class="col-xs-12 text-right">
                                                                            <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">Cancelar</button>
                                                                            <a href="@Url.Action("DeleteTask", "Task", new { id = task.Id, ticketId = Model.Id })" type="submit" class="btn btn-sm btn-danger">Eliminar</a>
                                                                        </div>
                                                                    </div>
                                                                </form>
                                                            </div>
                                                            <!-- END Modal Body -->
                                                        </div>
                                                    </div>
                                                </div>

                                                <div id="modal-spend-@task.Id" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
                                                    <div class="modal-dialog">
                                                        <div class="modal-content">
                                                            <!-- Modal Header -->
                                                            <div class="modal-header text-center">
                                                                <h2 class="modal-title"><i class="fa fa-pencil"></i> ASOCIAR GASTO</h2>
                                                            </div>
                                                            <!-- END Modal Header -->
                                                            <!-- Modal Body -->
                                                            <div class="modal-body">
                                                                <form action="index.html" method="post" enctype="multipart/form-data" class="form-horizontal form-bordered" onsubmit="return false;">
                                                                    <fieldset>
                                                                        <legend>El gasto que genere quedará asociado a la orden "@task.Description" y al consorcio @Model.Consortium.Ownership.Address.Street @Model.Consortium.Ownership.Address.Number</legend>
                                                                    </fieldset>
                                                                    <input type="hidden" id="taskConsortiumId" value="@Model.ConsortiumId" />
                                                                    <label class="control-label col-md-3">Rubro gasto</label>
                                                                    @Html.DropDownListFor(model => model.SpendItemId, Model.SpendItemList, "-- Elija Rubro de gasto --")

                                                                    <div class="form-group form-actions">
                                                                        <div class="col-xs-12 text-right">
                                                                            <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">Cancelar</button>
                                                                            <button data-html="@task.Id" onclick="location.href='/Spend/CreateSpend?consortiumId=@Model.ConsortiumId'" type="submit" name="spend-link" class="btn btn-sm btn-info">Crear Gasto</button>
                                                                        </div>
                                                                    </div>
                                                                </form>
                                                            </div>
                                                            <!-- END Modal Body -->
                                                        </div>
                                                    </div>
                                                </div>

                                                }

                                </tbody>
                            </table>
                        }
                        else
                        {
                            <div class="text-center">
                                <p>No se cargaron &oacute;rdenes</p>
                            </div>
                        }
                        <!-- END Latest Orders Content -->
                    </div>
                    <!-- END Latest Orders Block -->
                    <!-- Seguimientos -->
                    <div class="block">
                        <div class="block-title row">
                            <h2 class="col-md-11"><strong><i class="fa fa-calendar-o"></i> Seguimientos</strong></h2>                            
                            <div class="col-md-1 text-center ticket-create-add">
                                <a href="#modal-add-follow" data-toggle="modal" title="Agregar Seguimiento" value="Agregar Seguimiento" class="text-success"><i class="fa fa-plus-circle"></i></a>
                            </div>
                        </div>
                        <div>
                            @if (Model.TicketHistory != null && Model.TicketHistory.Any())
                            {
                            <ul>
                                @foreach (var follow in Model.TicketHistory)
                                {
                                    <li>
                                        <strong>Fecha: </strong> @follow.FollowDate.ToShortDateString()
                                        <p>@follow.Coment</p>
                                    </li>
                                }
                            </ul>
                            }
                            else
                            {
                                <div class="text-center">
                                    <p>No se cargaron seguimientos</p>
                                </div>
                            }
                        </div>
                    </div>
                    <!-- END Seguimientos -->
                </div>

                <div class="col-lg-6">
                    <!-- Top Products Block -->
                    <div class="block">
                        <!-- Top Products Title -->
                        <div class="block-title row">
                            <h2 class="col-md-11"><strong><i class="fa fa-comment-o"></i> Comentarios</strong></h2>
                            <div class="col-md-1 text-center ticket-create-add">
                                <a href="#modal-add-message" data-toggle="modal" title="Agregar Comentario" value="Agregar Comentario" class="text-success">
                                    <i class="fa fa-plus-circle"></i>
                                </a>
                            </div>
                        </div>
                        @if(Model.Messages.Any())
                        {
                            <ul class="media-list media-feed push">
                                @foreach (var message in Model.Messages)
                                {
                                    <li class="media">
                                        <a href="page_ready_user_profile.html" class="pull-left">
                                            <img src="~/Content/img/avatar.jpg" alt="Avatar" class="img-circle">
                                        </a>
                                        <div class="media-body">
                                            <p class="push-bit">
                                                <span class="text-muted pull-right">
                                                    hace
                                                    @{ TimeSpan restTime = DateTime.Now - message.Date;}
                                                    <small> @restTime.Days d&iacute;a@(restTime.Days == 1 ? "" : "s")</small>
                                                    @*<small>@restTime.Hours horas</small>*@
                                                </span>
                                            </p>

                                            <p>
                                                @*@{ var consortium = Model.Consortium != null ?
                                                    Model.Consortium.Ownership.Id.ToString() + " - " + Model.Consortium.Ownership.Address.Street.ToString() + " " + Model.Consortium.Ownership.Address.Number : "-";
                                                    var uf = Model.FunctionalUnit != null ? Model.FunctionalUnit.Number.ToString() : "-";
                                                }

                                                Consorcio: @consortium<BR>
                                                Unidad Funcional: @uf<BR>*@
                                                @message.Content
                                            </p>
                                            <span class="text-muted pull-right">@message.Sender.Name @message.Sender.Surname</span>
                                        
                                        </div>
                                    </li>
                                   }
                            </ul>
                        }
                          else {
                                    <div class="text-center">
                                        <p>No se cargaron comentarios</p>
                                    </div>
                        }

                        @*<div class="form-group">
                            <div class="text-center">
                                <a href="#modal-add-message" data-toggle="modal" title="Agregar Comentario" value="Agregar Comentario" class="btn btn-success">
                                    <i class="fa fa-plus"></i> Comentario
                                </a>
                            </div>
                        </div>*@


                    </div>
                    <!-- END Top Products Block -->
                </div>    <!-- END Quick Stats -->
            </div>
        }
    </div>
</div>



<div id="modal-add-message" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h2 class="modal-title"><i class="fa fa-comment-o"></i> Nuevo comentario</h2>
            </div>
            <!-- END Modal Header -->
            <!-- Modal Body -->
            <div class="modal-body">
                @using (Html.BeginForm("CreateMessage", "Messages", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal form-bordered" }))
                {
                    <input type="hidden" name="TicketId" id="TicketId" value="@Model.Id" />

                    <div class="form-group row">
                        <label class="control-label col-md-2">Mensaje</label>
                        <div class="col-md-9">
                            <textarea name="Content" id="Content" class="form-control text-box multi-line"></textarea>
                        </div>
                    </div>


                    <div class="form-group form-actions">
                        <div class="col-xs-12 text-right">
                            <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">Cancelar</button>

                            @*<button type="submit" class="btn btn-success"  data-dismiss="modal">Guardar</button>*@
                            <input type="submit" class="btn btn-info" value="Guardar" />
                        </div>
                    </div>
                }
                @*</form>*@
            </div>
            <!-- END Modal Body -->
        </div>
    </div>
</div>


@Html.Partial("_CreateTask", Model)
@Html.Partial("_CreateTicketFollow", Model)
@Html.Partial("_TicketFollowDetails", Model)

@section scripts {
    @*<script src="~/Scripts/chosen.jquery.min.js"></script>*@
    <script src="~/Scripts/Backlog/CreateTicket.js"></script>
}
<script>

    document.onreadystatechange = function () {
        var dropdowns = document.getElementsByName("SpendItemId");
        dropdowns.forEach(function (item, index, arr) {

            item.addEventListener(
                'change',
                function () {

                    var consortiumId = document.getElementById("taskConsortiumId").value;
                    var spendItem = this.value;
                    var referencia = "location.href = '/Spend/CreateSpend?consortiumId=" + consortiumId + "&spendItemId=" + spendItem;

                    var links = document.getElementsByName("spend-link");

                    links.forEach(function (it, ind, ar) {
                        var taskid = it.getAttribute("data-html");
                        it.setAttribute("onclick", referencia + "&taskId=" + taskid + "'");
                    });
                },
                false
            );

        });

    };

    var asignlabel = document.getElementById("autoasign-label");
    asignlabel.addEventListener(
        'click',
        function () {
            debugger
            var asigninput = document.getElementById("Autoasign");
            if (asigninput.getAttribute("checked") != null && asigninput.getAttribute("checked") != undefined) {
                asigninput.removeAttribute("checked");
            }
            else {
                asigninput.setAttribute("checked", "checked");
            }
        },
        false
    );
</script>

